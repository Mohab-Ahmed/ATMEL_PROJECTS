
ATMEGA3290_7-SEGMENT-MULTIPLEXING.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000104  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000b0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000104  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000134  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000997  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d3  00000000  00000000  00000b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ac  00000000  00000000  000013fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000016ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c6  00000000  00000000  000016d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00001b96  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001bde  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  54:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  58:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  5c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  60:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf ef       	ldi	r28, 0xFF	; 255
  6a:	d8 e0       	ldi	r29, 0x08	; 8
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 56 00 	jmp	0xac	; 0xac <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:

#include <util/delay.h>

int main(void)
{
	DDRE|=(1<<PE0);
  7c:	68 9a       	sbi	0x0d, 0	; 13
	DDRE|=(1<<PE1);
  7e:	69 9a       	sbi	0x0d, 1	; 13
	DDRE|=(1<<PE2);
  80:	6a 9a       	sbi	0x0d, 2	; 13
	DDRE|=(1<<PE3);
  82:	6b 9a       	sbi	0x0d, 3	; 13
	
	DDRF|=(1<<PF0);
  84:	80 9a       	sbi	0x10, 0	; 16
	DDRF|=(1<<PF1);
  86:	81 9a       	sbi	0x10, 1	; 16
	DDRF|=(1<<PF2);
  88:	82 9a       	sbi	0x10, 2	; 16
	
	PORTF|=(1<<PF0);
  8a:	88 9a       	sbi	0x11, 0	; 17
	PORTE|=2;
  8c:	71 9a       	sbi	0x0e, 1	; 14
	PORTF&=(~(1<<PF0));
  8e:	88 98       	cbi	0x11, 0	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  90:	2f e9       	ldi	r18, 0x9F	; 159
  92:	86 e8       	ldi	r24, 0x86	; 134
  94:	91 e0       	ldi	r25, 0x01	; 1
  96:	21 50       	subi	r18, 0x01	; 1
  98:	80 40       	sbci	r24, 0x00	; 0
  9a:	90 40       	sbci	r25, 0x00	; 0
  9c:	e1 f7       	brne	.-8      	; 0x96 <main+0x1a>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <main+0x24>
  a0:	00 00       	nop
	_delay_ms(500);
	PORTF|=(1<<PF2);
  a2:	8a 9a       	sbi	0x11, 2	; 17
	PORTE|=9;
  a4:	8e b1       	in	r24, 0x0e	; 14
  a6:	89 60       	ori	r24, 0x09	; 9
  a8:	8e b9       	out	0x0e, r24	; 14
  aa:	ff cf       	rjmp	.-2      	; 0xaa <main+0x2e>

000000ac <_exit>:
  ac:	f8 94       	cli

000000ae <__stop_program>:
  ae:	ff cf       	rjmp	.-2      	; 0xae <__stop_program>
